---
- name: Install MariaDB client + server
  ansible.builtin.apt:
    pkg: "{{ mariadb_packages }}"
    state: present
    update_cache: true
  notify: Remove MariaDB test database

- name: Optionally install automysqlbackup
  ansible.builtin.apt:
    pkg: "automysqlbackup"
    state: present
  when: mariadb_automysqlbackup

- name: Optionally install automysqlbackup
  ansible.builtin.apt:
    pkg: "mariadb-backup"
    state: present
  when: mariadb_backup

- name: Start MariaDB
  ansible.builtin.service:
    name: mysql
    state: started

- name: Configure MariaDB server
  ansible.builtin.template:
    src: etc/mysql/mariadb.conf.d/60-server.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/60-server.cnf
    owner: root
    group: root
    mode: "0644"
  notify: Restart mysql
  tags:
    - role:mariadb:config

- name: Configure MariaDB backup
  ansible.builtin.template:
    src: etc/mysql/mariadb.conf.d/70-backup.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/70-backup.cnf
    owner: root
    group: root
    mode: "0644"
  tags:
    - role:mariadb:config
  when: mariadb_backup

- name: Ensure databases are present
  community.mysql.mysql_db:
    name: "{{ item }}"
    login_unix_socket: /run/mysqld/mysqld.sock
  with_items: "{{ mariadb_databases }}"

- name: Run handlers if needed
  ansible.legacy.meta: flush_handlers

- name: Create additional MariaDB users
  community.mysql.mysql_user:
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv }}"
    login_unix_socket: /run/mysqld/mysqld.sock
  no_log: true
  with_items:
    - "{{ mariadb_users }}"

- name: Include replication tasks
  ansible.builtin.include_tasks: replication.yml
  when: mariadb_replication_master or mariadb_replication_slave
  tags:
    - mariadb_replication

- name: Include munin tasks
  ansible.builtin.include_tasks: munin.yml
  when: mariadb_munin
  tags:
    - munin
